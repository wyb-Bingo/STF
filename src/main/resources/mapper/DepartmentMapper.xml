<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ubin.stf.mapper.DepartmentMapper" >
    <resultMap id="BaseResultMap" type="com.ubin.stf.model.Department">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="parentId" property="parentId" jdbcType="VARCHAR" />
        <result column="depPath" property="depPath" jdbcType="VARCHAR" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
        <result column="isParent" property="isParent" jdbcType="BIT" />
        <result column="teamId" property="teamId" jdbcType="INTEGER" />
        <collection property="adminList" ofType="com.ubin.stf.model.User" javaType="ArrayList" select="getDepartmentIsAdmin" column="{id=id}" />
    </resultMap>

    <resultMap id="DepartmentIsAdmin" type="com.ubin.stf.model.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="openId" property="openId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="studentNumber" property="studentNumber" jdbcType="VARCHAR" />
        <result column="userFace" property="userFace" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
    </resultMap>

    <resultMap id="BaseWithChildren" type="com.ubin.stf.model.Department" extends="BaseResultMap">
        <collection property="children" ofType="com.ubin.stf.model.Department" select="getAllDepartmentWithChildren" column="{rootId=id,teamId=teamId}" />
    </resultMap>

    <sql id="Base_Column_List" >
    id, name, parentId, depPath, enabled, isParent ,teamId
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from department
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <delete id="deleteDepAdminByDepId" parameterType="integer">
        delete from department_admin
        where depId = #{id}
    </delete>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.ubin.stf.model.Department" >
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="parentId != null" >
                parentId,
            </if>
            <if test="depPath != null" >
                depPath,
            </if>
            <if test="enabled != null" >
                enabled,
            </if>
            <if test="isParent != null" >
                isParent,
            </if>
            <if test="teamId != null" >
                teamId
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null" >
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="depPath != null" >
                #{depPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null" >
                #{enabled,jdbcType=BIT},
            </if>
            <if test="isParent != null" >
                #{isParent,jdbcType=BIT},
            </if>
            <if test="teamId != null" >
                #{teamId,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <update id="updateDepartmentIsDepPath" >
        update department set depPath = #{depPath} where id = #{id}
    </update>

    <update id="updateDepartmentIsParent" >
        update department set isParent = 1 where id = #{id}
    </update>

    <update id="setDepartmentIsNotParent">
        update department set isParent = 0 where id = #{parentId}
    </update>

    <insert id="insertDepartmentAdmin" >
        insert into department_admin (depId,adminId) values (#{departmentId},#{adminId})
    </insert>
    <insert id="insertDepartmentUser" >
        insert into department_user (depId,userId) values (#{departmentId},#{userId})
    </insert>


    <select id="getAllDepartmentWithAdmin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from department
        where teamId = #{teamId}
    </select>

    <select id="getDepartmentIsAdmin" resultMap="DepartmentIsAdmin">
        select u.*
        from department_admin da join user u
        on da.adminId = u.id
        where da.depId = #{id}
    </select>

    <select id="getAllDepartmentWithChildren" resultMap= "BaseWithChildren">
        select
        <include refid="Base_Column_List" />
        from department
        where parentId = #{rootId} and teamId = #{teamId}
    </select>

    <select id="getDepartmentIsChildren" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from department
        where parentId = #{parentId}
    </select>

    <select id="getSimpleDepartmentInfoById" resultType="com.ubin.stf.model.Department" >
        select <include refid="Base_Column_List" />
        from department where id = #{depId}
    </select>

    <select id="getUserIsDepartment" resultType="com.ubin.stf.model.Department">
        select d.id, d.name, d.parentId, d.depPath, d.enabled, d.isParent ,d.teamId
        from department d join department_user du
        on d.id = du.depId
        where d.teamId = #{teamId} and du.userId = #{userId}

    </select>


</mapper>