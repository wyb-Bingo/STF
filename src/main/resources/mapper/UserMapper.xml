<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ubin.stf.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.ubin.stf.model.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="openId" property="openId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="studentNumber" property="studentNumber" jdbcType="VARCHAR" />
        <result column="userFace" property="userFace" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
    </resultMap>
    <resultMap id="UserWithDepartment" type="com.ubin.stf.model.User" extends="BaseResultMap">
        <association property="userIsDepartmentUnderTeam" javaType="com.ubin.stf.model.Department">
            <id column="did" property="id" jdbcType="INTEGER" />
            <result column="dname" property="name" jdbcType="VARCHAR" />
            <result column="dparentId" property="parentId" jdbcType="VARCHAR" />
            <result column="ddepPath" property="depPath" jdbcType="VARCHAR" />
            <result column="denabled" property="enabled" jdbcType="BIT" />
            <result column="disParent" property="isParent" jdbcType="BIT" />
        </association>
    </resultMap>

    <sql id="Base_Column_List" >
    id, openId,name, username, password, phone, email, address, studentNumber,userFace,remark,enabled
  </sql>
    <sql id="Base_Remove_Secret_List">
        id,name,username,phone, email, address, studentNumber,userFace,remark,enabled
    </sql>

    <select id="loadUserByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    *
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>

    <select id="loadUserByOpenId" resultMap="BaseResultMap">
        select
        *
        from user
        where openId = #{openId}
    </select>

    <update id="updateUserIsOpenId" parameterType="com.ubin.stf.model.User" >
        update user set openId = #{openId} where id = #{id}
    </update>

    <select id="getDepartmentIsUser" resultMap="UserWithDepartment">
        select
        u.id,u.name,u.username,u.phone,u.email,u.address,u.studentNumber,u.userFace,u.remark,u.enabled,
        d.id did,d.name dname,d.parentId dparentId,d.depPath ddepPath,d.enabled denabled,d.isParent disParent
        from department d join department_user du join user u
        on d.id = du.depId and du.userId = u.id
        where du.depId = #{id}
    </select>

    <select id="selectByStudentNumber" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where studentNumber = #{studentNumber}
    </select>

    <select id="selectCountTeamUserByUserIdAndTeamId" resultType="integer" >
        select count(id) from team_user where teamId = #{teamId} and userId = #{userId}
    </select>

    <insert id="insertTeamUser">
        insert into team_user(teamId,userId) values (#{teamId},#{userId})
    </insert>
    
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
         insert into user
         <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="id != null" >
            id,
        </if>
        <if test="name != null" >
            name,
        </if>
        <if test="phone != null" >
            phone,
        </if>
        <if test="email != null" >
            email,
        </if>
        <if test="address != null" >
            address,
        </if>
        <if test="enabled != null" >
            enabled,
        </if>
        <if test="username != null" >
            username,
        </if>
        <if test="password != null" >
            password,
        </if>
        <if test="userFace != null" >
            userface,
        </if>
        <if test="remark != null" >
            remark,
        </if>
        <if test="studentNumber != null">
            studentNumber
        </if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=CHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null" >
                #{enabled,jdbcType=BIT},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userFace != null" >
                #{userface,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="studentNumber != null" >
                #{studentNumber,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>

    <select id="selectCountTeamAdminByTeamIdUserId" resultType="integer">
        select count(id) from team_admin where teamId = #{teamId} and adminId = #{adminId}
    </select>

    <delete id="deleteUserUnderTeam">
        delete from team_user where teamId = #{teamId} and userId = #{userId}
    </delete>

    <delete id="deleteUserUnderDepartment">
        delete from department_user where userId = #{userId} and  depId = #{depId}
    </delete>
    
    <select id="getSimpleUserInfoById" resultMap="BaseResultMap">
        select <include refid="Base_Remove_Secret_List" />
        from user where id = #{id}
    </select>

</mapper>